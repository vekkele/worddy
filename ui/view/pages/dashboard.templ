package pages;

import (
	"github.com/vekkele/worddy/internal/domain"
	"github.com/vekkele/worddy/internal/utils"
	"github.com/vekkele/worddy/ui/view/layouts"
	"github.com/vekkele/worddy/ui/view/partials"
	"net/http"
	"strconv"
	"strings"
)

templ Dashboard(r *http.Request, words []domain.Word) {
	@layouts.Page("Dashboard") {
		@partials.Header(r, true)
		<main class="flex flex-col items-start gap-6 px-12 py-6" hx-boost="true">
			<a href="/word/add" class="btn">New Word</a>
			<a href="/review" class="btn">Review</a>
			<div class="flex flex-col gap-4">
				<h3 class="text-2xl">Saved Words</h3>
				<table>
					<thead>
						<tr>
							<th class="px-2 py-1 text-start">Word</th>
							<th class="px-2 py-1 text-start">Translations</th>
							<th class="px-2 py-1 text-start">Stage</th>
							<th class="px-2 py-1 text-start">Level</th>
							<th class="px-2 py-1 text-start">Next Review</th>
						</tr>
					</thead>
					<tbody>
						for _, w := range words {
							<tr class="p-2">
								<td class="px-2 py-1">{ w.Word }</td>
								<td class="px-2 py-1">{ strings.Join(w.Translations, ", ") }</td>
								<td class="px-2 py-1">{ string(utils.GetStageFromLevel(w.StageLevel)) }</td>
								<td class="px-2 py-1">{ strconv.Itoa(int(w.StageLevel)) }</td>
								<td class="px-2 py-1">{ utils.HumanDate(w.NextReview) }</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</main>
	}
}
