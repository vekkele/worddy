package pages

import (
	"github.com/justinas/nosurf"
	"github.com/vekkele/worddy/internal/i18n"
	"github.com/vekkele/worddy/internal/validator"
	"github.com/vekkele/worddy/ui/view/layouts"
	"github.com/vekkele/worddy/ui/view/partials"
	"net/http"
)

templ authForm(r *http.Request, action string) {
	<form class="flex flex-col flex-1 max-w-sm gap-6" hx-post={ action } hx-swap="outerHTML">
		<input type="hidden" name="csrf_token" value={ nosurf.Token(r) }/>
		{ children... }
	</form>
}

type SignupFormData struct {
	Email               string `form:"email"`
	Password            string `form:"password"`
	PasswordConfirm     string `form:"password-confirm"`
	validator.Validator `form:"-"`
}

templ SignupForm(r *http.Request, form SignupFormData) {
	{{ tr := i18n.FromCtx(ctx) }}
	@authForm(r, "/user/signup") {
		@partials.TextInput(partials.TextInputProps{
			Name:        "email",
			Value:       form.Email,
			Label:       tr.T("EmailLabel"),
			Type:        "email",
			Placeholder: tr.T("EmailPlaceholder"),
			Error:       form.FieldErrors["email"],
		})
		@partials.TextInput(partials.TextInputProps{
			Name:        "password",
			Label:       tr.T("PasswordLabel"),
			Type:        "password",
			Placeholder: tr.T("CreatePasswordPlaceholder"),
			Error:       form.FieldErrors["password"],
		})
		@partials.TextInput(partials.TextInputProps{
			Name:        "password-confirm",
			Label:       tr.T("ConfirmPasswordLabel"),
			Type:        "password",
			Placeholder: tr.T("ConfirmPasswordPlaceholder"),
			Error:       form.FieldErrors["password-confirm"],
		})
		<button class="btn">
			@i18n.T("SubmitButton")
		</button>
		<a href="/user/login" class="self-center link">
			@i18n.T("LoginButton")
		</a>
	}
}

templ SignupPage(r *http.Request, form SignupFormData) {
	@layouts.Page(i18n.FromCtx(ctx).T("SignUpPageTitle")) {
		<main class="flex justify-center px-10 py-16">
			@SignupForm(r, form)
		</main>
	}
}

type LoginFormData struct {
	Email               string `form:"email"`
	Password            string `form:"password"`
	validator.Validator `form:"-"`
}

templ LoginForm(r *http.Request, form LoginFormData) {
	{{ tr := i18n.FromCtx(ctx) }}
	@authForm(r, "/user/login") {
		for _, err := range form.NonFieldErrors {
			@partials.FormError(err)
		}
		@partials.TextInput(partials.TextInputProps{
			Name:        "email",
			Label:       tr.T("EmailLabel"),
			Type:        "email",
			Placeholder: tr.T("EmailPlaceholder"),
			Value:       form.Email,
			Error:       form.FieldErrors["email"],
		})
		@partials.TextInput(partials.TextInputProps{
			Name:        "password",
			Label:       tr.T("PasswordLabel"),
			Type:        "password",
			Placeholder: tr.T("EnterPasswordPlaceholder"),
			Error:       form.FieldErrors["password"],
		})
		<button class="btn">{ tr.T("SubmitButton") }</button>
		<a href="/user/signup" class="self-center link">{ tr.T("SignUpButton") }</a>
	}
}

templ LoginPage(r *http.Request, form LoginFormData) {
	@layouts.Page(i18n.FromCtx(ctx).T("LoginPageTitle")) {
		<main class="flex justify-center px-10 py-16">
			@LoginForm(r, form)
		</main>
	}
}
