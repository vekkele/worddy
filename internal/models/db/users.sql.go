// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO
  users (email, password_hash)
VALUES
  ($1, $2)
`

type CreateUserParams struct {
	Email        string
	PasswordHash []byte
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser, arg.Email, arg.PasswordHash)
	return err
}

const getByEmail = `-- name: GetByEmail :one
SELECT id, password_hash FROM users WHERE email = $1
`

type GetByEmailRow struct {
	ID           int64
	PasswordHash []byte
}

func (q *Queries) GetByEmail(ctx context.Context, email string) (GetByEmailRow, error) {
	row := q.db.QueryRow(ctx, getByEmail, email)
	var i GetByEmailRow
	err := row.Scan(&i.ID, &i.PasswordHash)
	return i, err
}
